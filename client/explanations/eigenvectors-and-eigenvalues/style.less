@primary: #3498db;
@secondary: #2ecc71;
@tertiary: #e74c3c;
@quaternary: #9b59b6;

span.primary {
  color: @primary;
}
span.secondary {
  color: @secondary;
}
span.tertiary {
  color: @tertiary;
}

playground {
  width: 100%;
  height: 300px;
  display: block;
  background-color: rgba(0, 0, 0, 0.1);
  .plot {
    .basis {
      stroke: black;
      stroke-width: 2;
    }
  }
}

.full-width-visualization {
  width: 100%;
  height: 300px;
  display: block;
  svg text {
    font-family: 'helvetica Neue';
  }
  // background-color: rgba(0, 0, 0, 0.1);
}

sf-to-ny-migration-map {
  &:extend(.full-width-visualization);
  .us-bg {
    fill: rgba(0, 0, 0, 0.1);
  }
  .arrow {
    stroke-width: 10;
    fill: none;
    stroke: black;
  }
}

sf-to-ny-data-as-vectors {
  &:extend(.full-width-visualization);
}

migration-vector-notation {
  &:extend(.full-width-visualization);
  height: 100px;
  svg path {
    shape-rendering: crispEdges;
  }
}

migration-linear-combination {
  &:extend(.full-width-visualization);
  // background-color: rgba(0, 0, 0, 0.1);
  height: 250px;
}

matrix-as-image-transform {
  &:extend(.full-width-visualization);
  height: 500px;
  // background-color: rgba(0, 0, 0, 0.1);
}

eigen-vectors {
  &:extend(.full-width-visualization);
  height: 320px;
  .a1 {
    color: @primary;
  }
  .a2 {
    color: @secondary;
  }
  .x0, .y0 {
    color: #e74c3c;
  }
  .x1, .y1 {
    color: #9b59b6;
  }
  .vectors {
    .vector {
      stroke-width: 4;
    }
  }
}

eigen-vectors, matrix-as-image-transform {
  @trans: 0.25s all;
  position: relative;
  .equation {
    width: 100%;
    // background-color: rgba(0, 0, 0, 0.1);
    text-align: center;
    font-family: 'helvetica Neue';
    .symbol, .vector {
      height: 100px;
      line-height: 100px;
      text-align: center;
      font-size: 24px;
      margin-right: 5px;
      display: inline-block;
      vertical-align: top;
    }
    .symbol {
      position: relative;
      .label, .value {
        transition: @trans;
      }
      .value {
        opacity: 0;
      }
      .label {
        opacity: 1;
        position: absolute;
        top: 0;
        width: 100%;
      }
    }
    .vector {
      // background-color: rgba(255, 0, 0, 0.1);
      .top, .bottom {
        height: 50px;
        line-height: 50px;
        position: relative;
      }
      .top .symbol, .top .value,
      .bottom .symbol, .bottom .value {
        width: 100%;
        height: 50px;
        line-height: 50px;
      }
      .top .value, .bottom .value {
        top: 0;
        position: absolute;
      }

      @w: 6px;
      .border-l, .border-r {
        width: @w * 2;
        height: 100px;
        display: block;
        float: left;
      }
      .border-l {
        border: @w/2 solid #333;
        border-right: none;
      }
      .center {
        display: block;
        float: left;
      }
      .border-r {
        border: @w/2 solid #333;
        border-left: none;
      }
    }
    .vector {
      .border-l, .border-r {
        transition: @trans;
      }
      .symbol {
        opacity: 1;
        transition: @trans;
      }
      .value {
        opacity: 0;
        transition: @trans;
      }
    }
    .vector.b1 {
      .border-l, .border-r {
        border-color: @primary;
      }
      color: @primary;
    }
    .vector.b2 {
      .border-l, .border-r {
        border-color: @secondary;
      }
      color: @secondary;
    }
    .vector.x1 {
      .border-l, .border-r {
        border-color: @quaternary;
      }
      color: @quaternary;
    }
    transition: @trans;
    .x0, .x1, .y0, .y1 {
      transition: @trans;
    }
  }
  .equation.dim {
    @color: rgba(0, 0, 0, 0.2);
    color: @color;
    .x0, .x1 {
      color: @color;
    }
    .y0, .y1 {
      color: @color;
    }
    .vector, .vector.b1, .vector.b2 {
      .border-l, .border-r {
        border-color: @color;
      }
      color: @color;
    }
  }
  .equation.dim.b1 {
    .vector.b1 {
      .border-l, .border-r {
        border-color: @primary;
      }
      .symbol {
        opacity: 0;
      }
      .value {
        opacity: 1;
      }
      color: @primary;
    }
  }
  .equation.dim.b2 {
    .vector.b2 {
      .border-l, .border-r {
        border-color: @secondary;
      }
      color: @secondary;
      .symbol {
        opacity: 0;
      }
      .value {
        opacity: 1;
      }
      color: @secondary;
    }
  }
  .equation.dim.sample {
    .x0, .y0 {
      color: #e74c3c;
    }
    .x1, .y1 {
      color: #9b59b6;
    }
    .symbol {
      .value {
        opacity: 1;
      }
      .label {
        opacity: 0;
      }
    }
  }
  .basis {
    stroke-width: 4;
    &.basis-1 {
      stroke: @primary;
    }
    &.basis-2 {
      stroke: @secondary;
    }
  }
  .point {
    fill: rgba(0, 0, 0, 0.6);
  }
  .sample-difference {
    stroke-width: 4;
    stroke-dasharray: 2, 2;
    stroke: @tertiary;
    opacity: 0.5;
  }
  .coord {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
}

eigen-space {
  &:extend(.full-width-visualization);
}
stochastic-matrix-multiplication {
  &:extend(.full-width-visualization);
}
repeated-matrix-multiplication {
  &:extend(.full-width-visualization);
}

.nob {
  transition: 0.25s all;
  circle{
    fill: rgba(0, 0, 0, 0.04);
    stroke: rgba(0, 0, 0, 0.04);
  }
  &:hover {
    fill: rgba(0, 0, 0, 0.2);
  }
}

repeated-matrix-multiplication {
  // background-color: rgba(0, 0, 0, 0.1);
  .sample-path {
    fill: none;
    stroke: rgba(0, 0, 0, 0.3);
    stroke-dasharray: 2,2;
  }
}

matrix-equation {
  @h: 50px;
  @fontSize: 18px;
  @matrixFontSize: 14px;
  @trans: 0.25s all;
  height: @h;
  display: block;
  // background-color: rgba(0, 0, 0, 0.1);
  text-align: center;
  font-family: 'helvetica Neue';
  // font-family: sans-serif;
  .element, .vector, .matrix {
    height: @h;
    line-height: @h;
    text-align: center;
    font-size: @fontSize;
    margin-right: 5px;
    display: inline-block;
    vertical-align: top;
    // background-color: rgba(0, 0, 255, 0.4);
  }
  .vector, .matrix {
    .top, .bottom {
      height: @h / 2;
      line-height: @h / 2;
      position: relative;
    }
    .top .label, .top .value,
    .bottom .label, .bottom .value {
      width: 100%;
      height: @h / 2;
      line-height: @h / 2;
      font-size: @matrixFontSize;
    }
    .top .label, .bottom .label {
      top: 0;
      position: absolute;
    }
    .top .left, .bottom .left,
    .top .right, .bottom .right {
      float: left;
      position: relative;
    }
    .top .left, .bottom .left {
      margin-right: 5px;
    }

    @bw: 4px;
    .border-l, .border-r {
      width: @bw * 2;
      height: @h;
      display: block;
      float: left;
    }
    .border-l {
      border: @bw/2 solid #333;
      border-right: none;
    }
    .center {
      display: block;
      float: left;
    }
    .border-r {
      border: @bw/2 solid #333;
      border-left: none;
    }
    .label {
      opacity: 1;
      transition: @trans;
    }
    .value {
      opacity: 0;
      transition: @trans;
    }
  }
  .element.dim, .vector.dim, .matrix.dim {
    opacity: 0.3;
  }
  .element.active, .vector.active, .matrix.active {
    .label {
      opacity: 0;
    }
    .value {
      opacity: 1;
    }
  }
  .element {
    &.primary {
      color: @primary;
    }
    &.secondary {
      color: @secondary;
    }
    &.tertiary {
      color: @tertiary;
    }
  }
  .vector {
    &.primary {
      color: @primary;
      .border-l, .border-r {
        border-color: @primary;
      }
    }
    &.secondary {
      color: @secondary;
      .border-l, .border-r {
        border-color: @secondary;
      }
    }
    &.tertiary {
      color: @tertiary;
      .border-l, .border-r {
        border-color: @tertiary;
      }
    }
  }
}

stochastic-matrix-multiplication {
  // background-color: rgba(255, 0, 0, 0.2);
}

migration {
  &:extend(.full-width-visualization);
  // background-color: rgba(0, 0, 0, 0.1);
  transition: 0.25s all;
  position: relative;
  &:hover {
    background-color: rgba(0, 0, 0, 0);
  }
  svg, canvas {
    position: absolute;
    top: 0;
    left: 0;
  }
  .travel-path {
    fill: none;
    stroke: rgba(0, 0, 0, 0.5);
    stroke: none;
    stroke-width: 2;
  }
}