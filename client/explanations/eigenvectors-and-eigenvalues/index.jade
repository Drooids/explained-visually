include ../../templates/common.jade

doctype html
html
  head
    include ../../templates/head
    include ../../templates/explanation-head
    link(rel="stylesheet" href= path + "style.css" type="text/css")
  body(ng-app="myApp" ng-controller="MainCtrl")
    section.menu
      a(href=basepath) Back
    section.title
      .title-region
        h1.title !{title}
        h3.by-line !{subtitle}
      +share
    section(ng-controller="IntroCtrl")
      +authors
      p
        :markdown
          To begin, let's look at what it means to multiply a vector by a square matrix. Let v be the vector
      div
        matrix-equation
          eq-element(label="'v'")
          eq-element(label="'='")
          eq-vector(class="tertiary" values="opt.pos0" labels="['P₀[0]', 'P₀[1]']" active="true")
      simple-plot
      p
        :markdown
          We can plot this vector as a point or as an arrow in a 2D x-y plane. 
          
          A square matrix is a block of vectors like v. Let the matrix A be

      matrix-equation
        eq-element(label="'A'")
        eq-element(label="'='")
        eq-matrix(class="primary" values="[ [opt.basis1[0], opt.basis2[0]], [opt.basis1[1], opt.basis2[1]]]" labels="[['b1,x', 'b2,y'], ['b1,x', 'b2,y']]" active="false")
        eq-element(label="'='")
        eq-matrix(class="primary" values="[ [opt.basis1[0], opt.basis2[0]], [opt.basis1[1], opt.basis2[1]]]" active="true")

      div(ng-controller="BasisCtrl")
        simple-plot

        p
          :markdown
            If we multiply v by A, then we send v somewhere else, to a new vector v'=Av.

            If v is an eigenvector of A, then v' will just be a *rescaled* version of v; that is, it will be in the same direction as v but farther from or closer to (0,0). That's all an eigenvector is.

            What's an eigenvalue? It's the amount, lambda, that v gets rescaled. In this case, it's [insert quantity]. So we have Av = v' = lambda v.

        div(ng-controller="TransCtrl")
          simple-plot
          p
            :markdown
              Below, drag a_1 and a_2 to define A. Then drag v to see the v' where A sends it. When v is an eigenvector of A, v' will be on the same line from the origin as v. [lights up when an eigenvector] Those lines are called *eigenspaces*. 
          div(ng-controller="RepeatCtrl")
            simple-plot

            div(ng-controller="PopulationCtrl")
              simple-plot
    section(ng-controller="BacteriaCtrl")
      p
        //- input(type="range" ng-model="charge" min="-10" max="0" step="0.1")
        //- | Charge: {{charge}}
        div
          bacteria-simulation(style="float: left; display: block")
          div(ng-controller="BacteriaPlotCtrl" style="display:inline-block")
            bacteria-plot
        div(style="text-align:center")
          button.btn.primary(ng-click="reset()") reset
          button.btn.primary(ng-click="forward()") forward
        br
        br
        div(style="text-align: center")
          {{opt.pos[opt.curGen][0]}} {{opt.pos[opt.curGen][0] === 1 ? 'child' : 'children' }} + {{opt.pos[opt.curGen][1]}} {{opt.pos[opt.curGen][1] === 1 ? 'adult' : 'adults' }} = {{opt.pos[opt.curGen][0] + opt.pos[opt.curGen][1]}}
          fibonacci-sequence

    section(ng-controller="MigrationCtrl")
      sf-to-ny-migration-map
      div(ng-controller="StochasticMatrixMultiplicationCtrl" style="position:relative")
        migration(style="width:70%;float:left")
        stochastic-matrix-multiplication(style="width:30%;float:left")
      div(style="clear:both")
    section(ng-controller="FourQuadCtrl")
      | steps:
      input(type="range" min="2" max="50" ng-model="opt.n")
      four-quad-plot
    br
    br

    div.layer.tooltips
    if !dev
      +footer
      +disqus
  script(src=basepath + "scripts/topojson.js" charset="utf-8")
  script(src=path + "script.js")
